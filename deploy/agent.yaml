apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: "raven-agent-role"
rules:
  - apiGroups:
      - "raven.openyurt.io"
    resources:
      - gateways
    verbs:
      - get
      - list
      - watch
---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: raven-agent-account
  namespace: kube-system
---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: raven-agent-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: "raven-agent-role"
subjects:
  - kind: ServiceAccount
    name: raven-agent-account
    namespace: kube-system
---

apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: raven-agent-ds
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: raven-agent
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 5%
  template:
    metadata:
      labels:
        app: raven-agent
    spec:
      hostNetwork: true
      serviceAccountName: raven-agent-account
      containers:
        - name: raven-agent
          image: njucjc/raven-agent:latest
          imagePullPolicy: Always
          securityContext:
            privileged: true
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
